package com.raymond.day20

import org.scalatest.funsuite.AnyFunSuite

class Day20Test extends AnyFunSuite {

  val puzzleInputn\n#..#.\n#....\n##..#\n..#..\n..###"
  val enhancement
  val image = Set((3L, 4L), (1L, 2L), (0L, 1L), (3L, 0L), (2L, 4L), (0L, 0L), (2L, 3L), (0L, 2L), (4L, 2L), (4L, 4L))

  test("Day20.enhancePixel_1") {
    assert(Day20.enhancePixel(enhancement, image, (2L, 2L), (0, 0), (4, 4)) == '#')
  }

  test("Day20.enhancePixel_2") {
    assert(Day20.enhancePixel(enhancement, image, (3L, 2L), (0, 0), (4, 4)) == '.')
  }

  test("Day20.solve1") {
    val input = puzzleInput.split(raw"\n").iterator

    assert(Day20.solve1(input) == 35)
  }

  test("Day20.solve1_2") {
    val input = ('#' + '.' * 511 + "\n\n...\n...\n...").split(raw"\n").iterator

    assert(Day20.solve1(input) == 0)
  }

  test("Day20.solve1_3") {
    val input = ("#" + ("." * 511) + "\n\n...\n...\n...").split(raw"\n").iterator

    assert(Day20.solve1(input, enhancements = 1) == 5 * 5)
  }

  test("Day20.solve2") {
    val input = puzzleInput.split(raw"\n").iterator

    assert(Day20.solve2(input) == 3351)
  }

}